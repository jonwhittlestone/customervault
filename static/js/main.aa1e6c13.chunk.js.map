{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["SignupForm","formik","useFormik","initialValues","email","onSubmit","values","alert","JSON","stringify","axios","method","url","data","then","r","console","log","react_default","a","createElement","handleSubmit","htmlFor","id","name","type","onChange","handleChange","value","App","className","App_SignupForm","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"+NAIMA,EAAa,WACjB,IAAMC,EAASC,YAAU,CACvBC,cAAe,CAAEC,MAAO,IACxBC,SAAU,SAAAC,GACRC,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,IACnCI,IAAM,CACFC,OAAQ,MACRC,IAAK,4DACLC,KAAML,KAAKC,UAAUH,KACpBQ,KAAK,SAACC,GAIPC,QAAQC,IAAI,gBAIpB,OACEC,EAAAC,EAAAC,cAAA,QAAMf,SAAUJ,EAAOoB,cACrBH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,SAAf,iBACAJ,EAAAC,EAAAC,cAAA,SACEG,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,SAAUzB,EAAO0B,aACjBC,MAAO3B,EAAOK,OAAOF,QAEvBc,EAAAC,EAAAC,cAAA,UAAQK,KAAK,UAAb,YAmBSI,MAdf,WACE,OACEX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,OACbZ,EAAAC,EAAAC,cAAA,UAAQU,UAAU,cAChBZ,EAAAC,EAAAC,cAAA,iBACOF,EAAAC,EAAAC,cAAA,2BADP,wBAGAF,EAAAC,EAAAC,cAAA,2BAEFF,EAAAC,EAAAC,cAACW,EAAD,QC/BSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAtB,KAAAqB,EAAAE,KAAA,UAAqBvB,KAAK,SAAAwB,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCFdW,IAASC,OACP3B,EAAAC,EAAAC,cAACF,EAAAC,EAAM2B,WAAP,KACE5B,EAAAC,EAAAC,cAAC2B,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.aa1e6c13.chunk.js","sourcesContent":["import { useFormik } from 'formik';\nimport React from 'react';\nimport axios from \"axios\";\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues: { email: \"\"},\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n      axios({\n          method: 'get',\n          url: 'http://customervault-production.herokuapp.com/healthcheck',\n          data: JSON.stringify(values),\n        }).then((r) => {\n          // setSubmitting(false);\n          // resetForm();\n          // setStatus('sent');\n          console.log('Thanks!');\n        });\n    }\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"email\">Email Address</label>\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        value={formik.values.email}\n      />\n      <button type=\"submit\">Submit</button>\n    </form>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <p>CustomerVault</p>\n      </header>\n      <SignupForm />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}